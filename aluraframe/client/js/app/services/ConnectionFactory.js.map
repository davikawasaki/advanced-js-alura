{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["stores","version","dbName","connection","close","ConnectionFactory","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","_createStores","e","target","result","onsuccess","bind","onerror","console","error","name","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKMA,kB,GAAS,CAAC,cAAD,C;AACTC,mB,GAAU,C;AACVC,kB,GAAS,Y;AAEXC,sB,GAAa,I;AACbC,iB,GAAQ,I;;yCAGCC,iB;;AAET;AACA;AACA;AACA;AACA;;AAEA,6CAAc;AAAA;;AACV,0BAAM,IAAIC,KAAJ,CAAU,uDAAV,CAAN;AACH;;;;oDAEsB;AACnB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBX,MAAtB,EAA8BD,OAA9B,CAAlB;AACAS,wCAAYI,eAAZ,GAA8B,aAAK;AAC/BT,kDAAkBU,aAAlB,CAAgCC,EAAEC,MAAF,CAASC,MAAzC;AACH,6BAFD;AAGAR,wCAAYS,SAAZ,GAAwB,aAAK;AACzB,oCAAG,CAAChB,UAAJ,EAAgB;AACZA,iDAAaa,EAAEC,MAAF,CAASC,MAAtB;AACA;AACA;AACAd,4CAAQD,WAAWC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR;AACAA,+CAAWC,KAAX,GAAmB,YAAW;AAC1B,8CAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN;AACH,qCAFD;AAGH;AACDE,wCAAQL,UAAR;AACH,6BAXD;AAYAO,wCAAYW,OAAZ,GAAsB,aAAK;AACvBC,wCAAQC,KAAR,CAAcP,EAAEC,MAAF,CAASM,KAAvB;AACAd,uCAAOO,EAAEC,MAAF,CAASM,KAAT,CAAeC,IAAtB;AACH,6BAHD;AAIH,yBArBM,CAAP;AAsBH;;;kDAEoBrB,U,EAAY;AAC7BH,+BAAOyB,OAAP,CAAe,iBAAS;AACpB,gCAAGtB,WAAWuB,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAH,EAAgDzB,WAAW0B,iBAAX,CAA6BD,KAA7B;AAChDzB,uCAAW2B,iBAAX,CAA6BF,KAA7B,EAAoC,EAACG,eAAe,IAAhB,EAApC;AACH,yBAHD;AAIH;;;sDAEwB;AACrB,4BAAG5B,UAAH,EAAe;AACXC;AACA;AACA;AACAD,yCAAa,IAAb;AACH;AACJ","file":"ConnectionFactory.js","sourcesContent":["// MODULE PATTERN WITH AUTO INVOKABLE FUNCTION\n// @see: https://medium.com/@tkssharma/javascript-module-pattern-b4b5012ada9f\n// var ConnectionFactory = (function() {\n\n// ES2015 MODULE PATTERN\nconst stores = ['negotiations'];\nconst version = 1;\nconst dbName = 'aluraframe';\n\nlet connection = null;\nlet close = null;\n\n// return class ConnectionFactory {\nexport class ConnectionFactory {\n\n    // ConnectionFactory with only one accessible connection as a static method\n    // 1. getConnection must be a static method\n    // 2. getConnection must return a promise\n    // 3. connection gotta be the same no matter how many times the static method is called\n    // 4. connection can't be closed directly, which means it can only happens through connectionFactory\n\n    constructor() {\n        throw new Error('Não é possível criar instâncias de ConnectionFactory!');\n    }\n\n    static getConnection() {\n        return new Promise((resolve, reject) => {\n            let openRequest = window.indexedDB.open(dbName, version);\n            openRequest.onupgradeneeded = e => {\n                ConnectionFactory._createStores(e.target.result);\n            };\n            openRequest.onsuccess = e => {\n                if(!connection) {\n                    connection = e.target.result;\n                    // Monkey-patching: changing API logic\n                    // @see: http://me.dt.in.th/page/JavaScript-override/\n                    close = connection.close.bind(connection);   \n                    connection.close = function() {\n                        throw new Error('Você não pode fechar diretamente a conexão!');\n                    }\n                }\n                resolve(connection);\n            };\n            openRequest.onerror = e => {\n                console.error(e.target.error);\n                reject(e.target.error.name);\n            };\n        });\n    }\n    \n    static _createStores(connection) {\n        stores.forEach(store => {\n            if(connection.objectStoreNames.contains(store)) connection.deleteObjectStore(store);\n            connection.createObjectStore(store, {autoIncrement: true});\n        });\n    }\n\n    static closeConnection() {\n        if(connection) {\n            close();\n            // Option without bind on monkey-patch\n            // Reflect.apply(close, connection, []);\n            connection = null;\n        }\n    }\n\n}\n\n// })();\n"]}