{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_errorHandler","json","data","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,G,EAAK;AACf,4BAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,+BAAOH,GAAP;AACH;;;wCAEGI,G,EAAK;AAAA;;AAEL;AACA;AACA,+BAAOC,MAAMD,GAAN;AACH;AADG,yBAEFE,IAFE,CAEG;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBAFH,EAGFM,IAHE,CAGG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAHH,CAAP;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;yCAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ;AACA,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS,EAAC,gBAAgB,kBAAjB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX;AAKP;AALO,yBAMNH,IANM,CAMD;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBANC,CAAP;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    _errorHandler(res) {\n        if(!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n\n    get(url) {\n        \n        // Using Fetch API from ES2016\n        // @see: https://braziljs.org/blog/fetch-api-e-o-javascript/\n        return fetch(url)\n            // Raw response to JSON\n            .then(res => this._errorHandler(res))\n            .then(res => res.json());\n\n        // Using Ajax object XMLHttpRequest\n        // return new Promise((resolve, reject) => {\n        //     let xhr = new XMLHttpRequest();\n        //     xhr.open('GET', url);\n        //     xhr.onreadystatechange = () => {\n        //         if(xhr.readyState == 4) {\n        //             if(xhr.status == 200) {\n        //                 resolve(JSON.parse(xhr.responseText));\n        //             } else {\n        //                 console.log(xhr.responseText);\n        //                 reject(xhr.responseText);\n        //             }\n        //         }\n        //     }\n        //     xhr.send();\n        // });\n    }\n\n    post(url, data) {\n\n        // Using Fetch API from ES2016\n        return fetch(url, {\n            headers: {'Content-type': 'application/json'},\n            method: 'post',\n            body: JSON.stringify(data)\n        })\n        // Raw response to JSON\n        .then(res => this._errorHandler(res));\n\n        // Using Ajax object XMLHttpRequest\n        // return new Promise((resolve, reject) => {\n        //     let xhr = new XMLHttpRequest();\n        //     xhr.open(\"POST\", url, true);\n        //     xhr.setRequestHeader(\"Content-type\", \"application/json\");\n        //     xhr.onreadystatechange = () => {\n        //         if (xhr.readyState == 4) {\n        //             if (xhr.status == 200) {\n        //                 resolve(JSON.parse(xhr.responseText));\n        //             } else {\n        //                 reject(xhr.responseText);\n        //             }\n        //         }\n        //     };\n        //     // JSON.stringifly to convert an object in a JSON-format string\n        //     xhr.send(JSON.stringify(data));\n        // });\n    }\n\n}"]}