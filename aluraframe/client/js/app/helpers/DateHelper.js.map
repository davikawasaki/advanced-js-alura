{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","date","getDate","getMonth","getFullYear","text","test","Date","split","reverse","map","item","index"],"mappings":";;;;;;;;IAAMA,U;AAEF,0BAAc;AAAA;;AACV,cAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACH;;AAED;AACA;;;;;iCACgBC,I,EAAM;AAClB,mBAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAgB,CAA5C,UAAiDF,KAAKG,WAAL,EAAjD;AACH;;;iCAEeC,I,EAAM;;AAElB,gBAAG,CAAC,uBAAuBC,IAAvB,CAA4BD,IAA5B,CAAJ,EAAuC,MAAM,IAAIL,KAAJ,CAAU,wCAAV,CAAN;;AAEvC;AACA,sDAAWO,IAAX,mCAAmBF,KACdG,KADc,CACR,GADQ,EAEdC,OAFc,GAGdC,GAHc,CAGV,UAACC,IAAD,EAAOC,KAAP;AAAA,uBAAiBA,SAAS,CAAT,GAAaD,OAAK,CAAlB,GAAsBA,IAAvC;AAAA,aAHU,CAAnB;AAII;AACA;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;AACH","file":"DateHelper.js","sourcesContent":["class DateHelper {\n\n    constructor() {\n        throw new Error('This class cannot be instantiated!');\n    }\n    \n    // Static methods: appertained to the class definition\n    // Using template strings\n    static date2txt(date) {\n        return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\n    }\n\n    static txt2date(text) {\n\n        if(!/\\d{2}\\/\\d{2}\\/\\d{4}$/.test(text)) throw new Error('Data deve estar no formato dd/mm/aaaa!');\n\n        // Version with spread operator\n        return new Date(...text\n            .split('/')\n            .reverse()\n            .map((item, index) => index == 1 ? item-1 : item));\n            // Alternative with module, which declares 1 for index equal to 1\n            // return item - index % 2\n\n        // Simpler version with split\n        // return new Date(text.split('-'));\n\n        // Date converts the given array to string with commas delimeters\n        // return new Date(text.split('-').join(','));\n\n        // Date converted with regex, changing every hyphen to comma\n        // return new Date(text.replace(/-/g, ','));\n    }\n\n}"]}